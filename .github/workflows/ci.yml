name: CI Pipeline

on:              
  push:        
    branches:
      - main
    tags:
      - 'v*'  # Pour déclencher sur les tags commençant par 'v'
  pull_request:    

jobs:
  build:
    runs-on: ubuntu-latest 
    container:              
      image: docker:latest  
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Configuration du cache
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
        
      - name: Build the application
        run: |
          echo "Building the application..."

      # Sauvegarde des artefacts de build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: dist/  # Ajustez selon votre dossier de build

  test_job_1:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Récupération des artefacts de build
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-files
        
      - name: Run test job 1
        run: echo "Test réussi pour le job 1"

      # Sauvegarde des résultats de test
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results/

  test_job_2:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Récupération des artefacts de build
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-files
        
      - name: Run test job 2
        run: echo "Test réussi pour le job 2"

  deploy:
    runs-on: ubuntu-latest
    needs: [test_job_1, test_job_2]
    if: (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Récupération des artefacts nécessaires au déploiement
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        
      - name: Deploy the application
        run: |
          echo "Déploiement réussi"
          echo "Environnement de déploiement : ${{ secrets.DEPLOY_ENV }}"